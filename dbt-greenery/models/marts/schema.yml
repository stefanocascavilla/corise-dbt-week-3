version: 2

models:
  - name: dim_users
    description: Dimension table containing the main information about users
    columns:
      - name: user_id
        description: I assume the user_id is the key of the dimension, so it needs to be unique and not_null
        tests:
          - not_null
          - unique
          - relationships:
              to: ref('stg_users')
              field: user_id

      - name: first_name
        description: I assume each user has a first_name, so it's not null
        tests:
          - not_null

      - name: last_name
        description: I assume each user has a last_name, so it's not null
        tests:
          - not_null

      - name: email
        description: I assume each user has a unique email, and it needs to be not null
        tests:
          - not_null
          - unique

      - name: phone_number
        description: I assume each user has a phone_number, so it's not null
        tests:
          - not_null

      - name: address_id
        description: I assume each user lives in an address, so it's not null. The address is needs to exist in the stg_addresses model
        tests:
          - not_null
          - relationships:
              to: ref('stg_addresses')
              field: address_id

  - name: int_user_orders
    description: Intermediate model created to join users along with orders they made
    columns:
      - name: record_key
        description: The primary key for this model. Created through the surrogate_key macro.
        tests:
          - not_null
          - unique

      - name: user_id
        description: The user_id represent the id of the user that made the order so it's not null.
        tests:
          - not_null
          - relationships:
              to: ref('stg_users')
              field: user_id

      - name: email
        description: The email of the user that made the order. It's a not null field.
        tests:
          - not_null

      - name: created_at
        description: The day the order has been placed.
        tests:
          - not_null

      - name: order_id
        description: The id of the order the user made. It's not null and unique.
        tests:
          - not_null
          - unique
          - relationships:
              to: ref('stg_orders')
              field: order_id

  - name: fact_aggregated_user_orders
    description: Fact table containing info of the users (id and email) and KPIs on the orders they made daily (total orders made)
    columns:
      - name: user_id
        description: The user_id represent the id of the user that made the order so it's not null.
        tests:
          - not_null
          - relationships:
              to: ref('stg_users')
              field: user_id

      - name: email
        description: The email of the user that made the order. It's a not null field.
        tests:
          - not_null

      - name: total_day_orders
        description: The total orders made by the users in a specific day. Not null information
        tests:
          - not_null

  - name: dim_contry_inhabitants
    description: Dimension table containing the countries registered in the system along with the customers that live there.
    columns:
      - name: country
        description: The country name. It's not null and needs to be found in the stg_addresses model. Because there could be countries with the same name, I didn't set the unique test but not_constant
        tests:
          - not_null
          - not_constant
          - relationships:
              to: ref('stg_addresses')
              field: country

      - name: state
        description: The state name. It's not null.
        tests:
          - not_null

      - name: country_inhabitants
        description: The total inhabitants of a country. Not null value.
        tests:
          - not_null

  - name: int_user_events
    description: Intermediate model that represents the events made by the users
    columns:
      - name: record_key
        description: The primary key for this model. Created through the surrogate_key macro.
        tests:
          - not_null
          - unique

      - name: event_id
        description: The id of the event generated. It's not null and unique. It needs to be found in the stg_events model.
        tests:
          - not_null
          - unique
          - relationships:
              to: ref('stg_events')
              field: event_id

      - name: page_url
        description: The page visited while the event has been generated.
        tests:
          - not_null

      - name: user_id
        description: The id of the user that generated the event. It's not null and the id needs to be found in the stg_users model.
        tests:
          - not_null
          - relationships:
              to: ref('stg_users')
              field: user_id

      - name: created_at
        description: The day the order has been placed.
        tests:
          - not_null

      - name: email
        description: The email of the user that made the order. It's a not null field.
        tests:
          - not_null

  - name: fact_aggregated_user_events
    description: Fact table containing info of the users (id and email) and KPIs on the events they made daily (total events made)
    columns:
      - name: user_id
        description: The user_id represent the id of the user that made the event so it's not null.
        tests:
          - not_null
          - relationships:
              to: ref('stg_users')
              field: user_id

      - name: email
        description: The email of the user that made the event. It's a not null field.
        tests:
          - not_null

      - name: total_day_events
        description: The total events made by the users in a specific day. Not null information
        tests:
          - not_null

  - name: dim_products
    description: Dimension table containing information about the products available on the platform.
    columns:
      - name: product_id
        description: The id of the product. It's unique and not null, and needs to be found in the stg_products model.
        tests:
          - not_null
          - unique
          - relationships:
              to: ref('stg_products')
              field: product_id

      - name: name
        description: The product name. It's a not null field.
        tests:
          - not_null

      - name: price
        description: The unitary price of the product. It's a not null field.
        tests:
          - not_null

      - name: quantity
        description: The stock quantity available for the product. It's not null
        tests:
          - not_null

  - name: fact_order_products
    description: Fact table containing info of the orders made along with KPIs based on the products associated (total products for the order).
    columns:
      - name: order_id
        description: The id of the order. It's not null, unique, and needs to be found in the stg_orders model.
        tests:
          - not_null
          - unique
          - relationships:
              to: ref('stg_orders')
              field: order_id

      - name: created_at
        description: The day the order has been placed.
        tests:
          - not_null

      - name: order_total
        description: The total spent for the order. A not null numeric field.
        tests:
          - not_null

      - name: total_products
        description: The number of products related to the order. Not null field.
        tests:
          - not_null